Elm.PeerClient = Elm.PeerClient || {};
Elm.PeerClient.make = function (_elm) {
   "use strict";
   _elm.PeerClient = _elm.PeerClient || {};
   if (_elm.PeerClient.values) return _elm.PeerClient.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Native$PeerClient = Elm.Native.PeerClient.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Task = Elm.Task.make(_elm);
   var _op = {};
   var receive = $Native$PeerClient.receive;
   var serverUpdates = $Native$PeerClient.serverUpdates;
   var makePeer = $Native$PeerClient.makePeer;
   var IntroPeer = function (a) {    return {ctor: "IntroPeer",_0: a};};
   var Message = F2(function (a,b) {    return {ctor: "Message",_0: a,_1: b};});
   var Peer = {ctor: "Peer"};
   return _elm.PeerClient.values = {_op: _op,makePeer: makePeer,serverUpdates: serverUpdates,receive: receive};
};